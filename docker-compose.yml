services:
  db:
    image: postgres:latest
    container_name: backend_db
    restart:
        unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
#    ports:
#      - "5432:5432"
#    profiles:
#      - testdb
#      - testadmin
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
        - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: "pgadmin"
    hostname: "pgadmin"
    env_file:
      - .env
    ports:
      - '${DB_PGADMIN_PORT:-5050}:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=${DB_PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${DB_PGADMIN_PASSWORD:-password}
#    profiles:
#      - testdb
#      - testadmin
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - backend

  admin-portal:
    build: ./adminportal
    container_name: admin-portal
    env_file:
      - .env
    restart:
      unless-stopped
    ports:
      - "9000:5000"
#    profiles:
#      - testadmin
    depends_on:
      - db
    networks:
        - backend
  user-portal:
    build: ./userportal
    container_name: user-portal
    env_file:
      - .env
    restart:
      unless-stopped
    ports:
      - "5000:5000"
#    profiles:
#      - testadmin
    depends_on:
      - db
    networks:
        - backend
  user-frontend:
    build: ./userfrontend
    container_name: user-frontend
    env_file:
      - .env
    restart:
      unless-stopped
    ports:
      - "8080:80"
    profiles:
      - vuex
    depends_on:
      - db
    networks:
        - backend
  user-frontend-pinia:
    build: ./userfrontendpinia
    container_name: user-frontend
    env_file:
      - .env
    restart:
      unless-stopped
    ports:
      - "8080:80"
    profiles:
      - vuex
    depends_on:
      - db
    networks:
      - backend

networks:
  backend:
    driver: bridge